
ポーカーのルール

トランプは(1~13)*4=52枚とする。
ジョーカーは使わない。

ポーカーのゲームの流れ

1,52枚からランダムな5枚をプレイヤー,CPUに配る
2,手札をみて、変えたいカードを選択する。(0~5枚)
3,交換後、役を判定する。4,手札をオープンし、強い役の方がwinとする。

システム的な観点から見るポーカーの流れ

1,52枚からランダムな5枚をプレイヤー,CPUに配る
2,手札をみて、変えたいカードを選択する。(0~5枚)
    →左から順に、1,2,3,4,5,0(変えない)と数字をつけて、選択した数字のカードを交換する。(0の場合は交換しない処理にする)
    →※CPUの交換ロジックはどうする？→(ランダムに0~5枚選ぶ、とかでいい？or最も役ができやすい確率を優先するようなロジックを書く？)
    →52-10(自分の初期分＋CPUの初期分)  = 42 からランダムに指定枚数分取得する。(自分が先？CPUが先？)
3,交換後、役を判定する。
    →役enumで強い順からif分でチェックを行う。最後まで一致しなかった場合はブタという役にする。役の強さは数字で設定？？
4,手札をオープンし、強い役の方がwinとする。



クラスの分類
Cards enum(各カードを定数に持つ)
Hands enum(各役を定数に持ち,役の強さ判定を行うメソッドも必要,カードのスートによる強さ,カードの数字による強さも判定する必要あり)
Main(上記ゲームの流れを実行する部分)
CardsNumGrade enum(カードの数字の強さを定数に持つ)
SuitsGrade enum(カードのスートの強さを定数に持つ)
GetRandomFiveCards class(カードのリストから指定された数(1~5枚)ランダムなカードを取得するメソッド)
Judge class(役の強さ判定を行うメソッド、カードの数字による強さ判定を行うメソッド、カードのスートによる強さ判定を行うメソッド)


書こうと思っているメソッド
役の比較メソッド
カードnumグレードの比較メソッド
スートグレードの比較メソッド

役の比較メソッドで判定がつく＝break
else
カードのnumグレード比較メソッド
else
スートグレードの比較メソッド

